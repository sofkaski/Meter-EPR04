[{"id":"d2301d5d.2827b","type":"tab","label":"Flow 1"},{"id":"64555eda.600a1","type":"tab","label":"Flow 2"},{"id":"695d7e1d.673ca","type":"modbus-rtu-config","z":"d2301d5d.2827b","unit_id":"1","serial_device":"/dev/ttyUSB0","serial_speed":"9600","serial_parity":"N","serial_databits":"8","serial_stopbits":"1"},{"id":"66e2c025.d43f6","type":"nodebot","z":"d2301d5d.2827b","name":"RB-1","username":"","password":"","boardType":"raspi-io","serialportName":"","connectionType":"local","mqttServer":"","socketServer":"","pubTopic":"","subTopic":"","tcpHost":"","tcpPort":"","sparkId":"","sparkToken":"","beanId":"","impId":"","meshbluServer":"https://meshblu.octoblu.com","uuid":"","token":"","sendUuid":""},{"id":"5bf998c7.933108","type":"websocket-listener","z":"64555eda.600a1","path":"/ws/simple","wholemsg":"false"},{"id":"6639ee05.ffadc","type":"websocket-client","z":"64555eda.600a1","path":"ws://localhost:1880/ws/simple","wholemsg":"false"},{"id":"6d2524ba.0e7b9c","type":"modbus-rtu-in","z":"d2301d5d.2827b","name":"Modbus-1","modbusConnection":"695d7e1d.673ca","x":267,"y":332,"wires":[["9dbb54be.8e41c8"]]},{"id":"9dbb54be.8e41c8","type":"epr04s","z":"d2301d5d.2827b","name":"epr04-1","pollingInterval":10000,"x":359,"y":408,"wires":[["6d2524ba.0e7b9c"],["c9e8664e.35e128","cce56497.1398c8","97a0d083.fe6d3","39fa1d12.8dd3a2","f5397463.fcdca8","636ac9d.a9fb138"]]},{"id":"c9e8664e.35e128","type":"debug","z":"d2301d5d.2827b","name":"","active":false,"console":"false","complete":"true","x":527,"y":429,"wires":[]},{"id":"cce56497.1398c8","type":"function","z":"d2301d5d.2827b","name":"totalImportPowerLimit","func":"if (!context.global.powerUpperLimit) {\n    context.global.powerUpperLimit = 45;\n}\n var PowerState = {\n        UNDER_LIMIT: {fill:\"green\",shape:\"dot\",text:\"\"},\n        OVER_LIMIT: {fill:\"red\",shape:\"dot\",text:\"\"}\n };\n \nif (msg.topic != \"EPR04Measurements\") {\n    return msg;\n}\nvar REGISTER = global.get('epr04sregisters').REGISTER;\nvar upperLimitExceeded = false;\nvar power = parseFloat(msg.payload.data.TotalActivePower.Import);\nif (power > context.global.powerUpperLimit) {\n    upperLimitExceeded = true;\n}\nmsg.topic = \"powerLimit\";\nmsg.payload.tstamp = Date.now();\nif (upperLimitExceeded){\n    msg.payload.data = {exceeded:true, powerValue:power};\n    var powerState = PowerState.OVER_LIMIT;\n    powerState.text = \"over the limit \" + context.global.powerUpperLimit.toString();\n    node.status(powerState);\n}\nelse {\n    msg.payload.data = {exceeded:false, powerValue:power};\n    var powerState = PowerState.UNDER_LIMIT;\n    powerState.text = \"under the limit \" + context.global.powerUpperLimit.toString();\n    node.status(powerState);\n}\nreturn msg;\n","outputs":1,"noerr":0,"x":735,"y":278,"wires":[["69a1c070.9c8b6","65f83ded.146e64","735bcb3.2010d34"]]},{"id":"69a1c070.9c8b6","type":"debug","z":"d2301d5d.2827b","name":"","active":false,"console":"false","complete":"false","x":939,"y":332,"wires":[]},{"id":"f8595f25.ebc43","type":"johnny5","z":"d2301d5d.2827b","name":"Relays on RB-1","func":"var relay1 = new five.Relay('GPIO24');\nvar relay2 = new five.Relay('GPIO25');\nvar relays = [relay1,relay2];\n\nnode.on(\"input\", function(msg) {\n    if (msg.topic === \"relayControl\") {\n        if (msg.payload.state == 1) {\n            relays[msg.payload.relay].on();\n        }\n        else {\n            relays[msg.payload.relay].off();\n        }\n        var outPayload = {tstamp: Date.now(), data: {}};\n        outPayload.data[msg.payload.relay] = msg.payload.state;\n        msg.payload = outPayload;\n    }\n    return msg;\n});","board":"66e2c025.d43f6","noerr":0,"x":954,"y":87,"wires":[["f8532f2d.9da18"]]},{"id":"65f83ded.146e64","type":"function","z":"d2301d5d.2827b","name":"Power control","func":"if (msg.topic === \"powerLimit\") {\n    msg.topic = \"relayControl\";\n    msg.payload.relay = 0;\n    if (msg.payload.data.exceeded) {\n        msg.payload.state = 1;\n    }\n    else {\n        msg.payload.state = 0;\n    }\n    msg.tstamp = Date.now();\n}\nreturn msg;","outputs":1,"noerr":0,"x":817,"y":161,"wires":[["f8595f25.ebc43","84f1b92e.9d4bc8"]]},{"id":"a6b6a01f.864d4","type":"inject","z":"64555eda.600a1","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"5","crontab":"","once":false,"x":209,"y":202,"wires":[["e93aa114.a16e9"]]},{"id":"f7c17f17.42fbd","type":"websocket out","z":"64555eda.600a1","name":"","server":"5bf998c7.933108","client":"","x":644,"y":203,"wires":[]},{"id":"68d52727.dd3618","type":"http response","z":"64555eda.600a1","name":"","x":615,"y":143,"wires":[]},{"id":"87f4e9f3.ddf2e8","type":"http in","z":"64555eda.600a1","name":"","url":"/simple","method":"get","swaggerDoc":"","x":246,"y":143,"wires":[["febb7e3e.d7933"]]},{"id":"febb7e3e.d7933","type":"template","z":"64555eda.600a1","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":443,"y":143,"wires":[["68d52727.dd3618"]]},{"id":"e93aa114.a16e9","type":"function","z":"64555eda.600a1","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":432,"y":203,"wires":[["f7c17f17.42fbd"]]},{"id":"76457d14.8d34e4","type":"websocket in","z":"64555eda.600a1","name":"","server":"","client":"6639ee05.ffadc","x":491,"y":255,"wires":[["8e4f0fff.0a0c9"]]},{"id":"8e4f0fff.0a0c9","type":"debug","z":"64555eda.600a1","name":"","active":false,"console":"false","complete":"false","x":745,"y":253,"wires":[]},{"id":"735bcb3.2010d34","type":"iot-datasource","z":"d2301d5d.2827b","name":"Total import active power","tstampField":"","dataField":"data.powerValue","disableDiscover":true,"x":802,"y":460,"wires":[["eafd5f8a.97847"]]},{"id":"eafd5f8a.97847","type":"debug","z":"d2301d5d.2827b","name":"","active":false,"console":"false","complete":"true","x":954,"y":552,"wires":[]},{"id":"97a0d083.fe6d3","type":"iot-datasource","z":"d2301d5d.2827b","name":"Active Power, L1","tstampField":"","dataField":"data.ActivePower.L1","disableDiscover":true,"x":543,"y":514,"wires":[[]]},{"id":"39fa1d12.8dd3a2","type":"iot-datasource","z":"d2301d5d.2827b","name":"Active Power, L2","tstampField":"","dataField":"data.ActivePower.L2","disableDiscover":true,"x":548,"y":575,"wires":[[]]},{"id":"f5397463.fcdca8","type":"iot-datasource","z":"d2301d5d.2827b","name":"Active Power, L3","tstampField":"","dataField":"data.ActivePower.L3","disableDiscover":true,"x":548,"y":620,"wires":[[]]},{"id":"636ac9d.a9fb138","type":"iot-datasource","z":"d2301d5d.2827b","name":"Frequency","tstampField":"","dataField":"data.Frequency.Frequency","disableDiscover":true,"x":531,"y":673,"wires":[[]]},{"id":"84f1b92e.9d4bc8","type":"iot-datasource","z":"d2301d5d.2827b","name":"Relay 1 State","tstampField":"","dataField":"state","disableDiscover":false,"x":1052,"y":238,"wires":[[]]},{"id":"f8532f2d.9da18","type":"debug","z":"d2301d5d.2827b","name":"","active":true,"console":"false","complete":"false","x":1064,"y":183,"wires":[]}]